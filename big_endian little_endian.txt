uint32_t x = 0x76543210;
uint8_t *c = (uint8_t *) &x;

Big endian format:
------------------
Byte address  | 0x01 | 0x02 | 0x03 | 0x04 | 
              +++++++++++++++++++++++++++++
Byte content  | 0x76 | 0x54 | 0x32 | 0x10 |
			 
Little endian format: -- my computer !!!!!!!!!!!!!!!!
---------------------
Byte address  | 0x01 | 0x02 | 0x03 | 0x04 | 
              +++++++++++++++++++++++++++++
Byte content  | 0x10 | 0x32 | 0x54 | 0x76 |

  //////////////////////////////////////////
array           0-1-2.....
number in bit:  .... bit[1]-bit[0]

////////////////////////////////////////////////////
/// read text messenger
fread -> char <=> fscanf("%c",uint8_t) 
fgets(buff, 65, file);
 fread(buff,1,64,file);
aa -> a -- a

// Read contents of a file as hex in C
fscanf("%2hhx",uint8_t) // 2 character store in hh (unsigned char)  x hex
// %8lx
aa -> 0xaa

// read file like hex editor
uint8_t c=fgetc(file);
"rb"
read 1 byte



////////////////////////////////////////////////////////
// malloc, realloc
uint8_t *m = (uint8_t *)malloc(1);
Test(&m);
void Test(uint8_t **m)
{
    // neu ko du cho chua se tao mot dia chi moi
    *m = (uint8_t *)realloc(*m, 2);
    (*m)[0] = 1;
}



mang dong ko dc dung 
int var[value] !!!!!!!!!!!!!!!!!
phai cap phat dong malloc, calloc...